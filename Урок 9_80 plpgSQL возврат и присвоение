-- возврат суммы товара в продаже
CREATE OR REPLACE FUNCTION get_total_number_of_goods() RETURNS bigint AS
$$
BEGIN
	RETURN sum(units_in_stock)
	FROM products;
END;
$$ LANGUAGE plpgsql;
-- в лекции 3120

SELECT get_total_number_of_goods();


-- вывод максимальной цены из всех discontinue продуктов
CREATE OR REPLACE FUNCTION get_max_price_from_discontinued() RETURNS real AS
$$
BEGIN
	RETURN max(unit_price)
	FROM products
	WHERE discontinued = 1;
END;
$$ LANGUAGE plpgsql;

SELECT get_max_price_from_discontinued();


-- расширение: возврат макс и мин цены
-- первый метод - присвоить значения переменным в два захода
CREATE OR REPLACE FUNCTION get_price_boundaries(OUT max_price real, OUT min_price real) AS
$$
BEGIN
	max_price := MAX(unit_price) FROM products; -- можно использовать и обычный знак =
	min_price := MIN(unit_price) FROM products;
END;
$$ LANGUAGE plpgsql;

SELECT get_price_boundaries();

-- второй вариант - в один заход
CREATE OR REPLACE FUNCTION get_price_boundaries(OUT max_price real, OUT min_price real) AS
$$
BEGIN
	SELECT MAX(unit_price), MIN(unit_price)
	INTO max_price, min_price
	FROM products;
END;
$$ LANGUAGE plpgsql;

SELECT get_price_boundaries(); -- выводит тип record в одной ячейке
SELECT * FROM get_price_boundaries(); -- выводит две ячейки в строке


-- 
CREATE OR REPLACE FUNCTION get_sum(x int, y int, OUT res int) AS
$$
BEGIN
	res := x + y;
	RETURN; -- принудительное завершение функции
END;
$$ LANGUAGE plpgsql;

SELECT get_sum(2, 3);
SELECT * FROM get_sum(2, 3);

-- возвращает клиентов с фильтрацией по стране
CREATE OR REPLACE FUNCTION get_customers_by_country(customer_country varchar)
	RETURNS SETOF customers AS
$$
BEGIN
	RETURN QUERY
	SELECT *
	FROM customers
	WHERE country = customer_country;
END;
$$ LANGUAGE plpgsql;

SELECT * FROM get_customers_by_country('USA');
-- в лекции 13