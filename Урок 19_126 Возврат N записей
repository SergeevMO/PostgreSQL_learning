-- взять первые N значений по рангу
WITH sorted_prices AS
(
	SELECT
		product_id,
		ROW_NUMBER() OVER(ORDER BY unit_price DESC NULLS LAST) AS nth
	FROM products
	WHERE unit_price IS NOT NULL
)
SELECT
	products.*,
	nth
FROM products
INNER JOIN sorted_prices USING(product_id)
WHERE product_id = ANY (
	SELECT product_id
	FROM sorted_prices
	WHERE nth = 53
);

WITH sorted_prices AS
(
	SELECT
		products.*,
		ROW_NUMBER() OVER(ORDER BY unit_price DESC NULLS LAST) AS nth
	FROM products
	WHERE unit_price IS NOT NULL
)
SELECT *
FROM sorted_prices
WHERE product_id = ANY (
	SELECT product_id
	FROM sorted_prices
	WHERE nth = 53
);

-- так нельзя !!!
SELECT
	products.*,
	ROW_NUMBER() OVER(ORDER BY unit_price DESC NULLS LAST) AS nth
FROM products
WHERE unit_price IS NOT NULL AND nth = 53;


-- выборка из данных, где ранги присвоены в пределах групп
SELECT *
FROM (
	SELECT
		order_id,
		product_id,
		unit_price,
		quantity,
		RANK() OVER(PARTITION BY order_id ORDER BY quantity DESC) AS rank_quant
		--, count(*) OVER()
	FROM orders
	JOIN order_details USING(order_id)
	-- 2153 записи
) AS subquery
WHERE rank_quant <= 3;
-- 1945 записей