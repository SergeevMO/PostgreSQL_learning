-- первый вариант
BEGIN TRANSACTION;

WITH prod_update AS
(
	UPDATE products
	SET discontinued = 1
	WHERE units_in_stock < 10
	RETURNING product_id
)
CREATE TABLE last_orders_on_discontinued AS -- данный синтаксис с ОТВ не работает.
(
	SELECT *
	FROM order_details
	WHERE product_id IN (SELECT product_id FROM prod_update)
);

COMMIT;

-- второй вариант.
-- удалим таблицу:
DROP TABLE IF EXISTS last_orders_on_discontinued;

BEGIN TRANSACTION;

WITH prod_update AS
(
	UPDATE products
	SET discontinued = 1
	WHERE units_in_stock < 10
	RETURNING product_id
)
SELECT * INTO last_orders_on_discontinued
FROM order_details
WHERE product_id IN (SELECT product_id FROM prod_update);

COMMIT;

SELECT * FROM last_orders_on_discontinued;

-- введём строку, которая выдаст ошибку
BEGIN TRANSACTION;

WITH prod_update AS
(
	UPDATE products
	SET discontinued = 1
	WHERE units_in_stock < 10
	RETURNING product_id
)
SELECT * INTO last_orders_on_discontinued
FROM order_details
WHERE product_id IN (SELECT product_id FROM prod_update);

DROP TABLE last_orders_on_discontinued_1;

COMMIT;

-- добавил откат
BEGIN TRANSACTION;

WITH prod_update AS
(
	UPDATE products
	SET discontinued = 1
	WHERE units_in_stock < 10
	RETURNING product_id
)
SELECT * INTO last_orders_on_discontinued
FROM order_details
WHERE product_id IN (SELECT product_id FROM prod_update);

DROP TABLE last_orders_on_discontinued_1;

ROLLBACK;

COMMIT;
-- в лекции появлялось сообщение об откате, но здесь опять вожникает ошибка

--
BEGIN TRANSACTION;

WITH prod_update AS
(
	UPDATE products
	SET discontinued = 1
	WHERE units_in_stock < 10
	RETURNING product_id
)
SELECT * INTO last_orders_on_discontinued
FROM order_details
WHERE product_id IN (SELECT product_id FROM prod_update);

DELETE FROM order_details
WHERE product_id IN (SELECT product_id FROM last_orders_on_discontinued);

SELECT * FROM order_details;

ROLLBACK;

COMMIT;


-- использование точек восстановления
BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;

WITH prod_update AS
(
	UPDATE products
	SET discontinued = 1
	WHERE units_in_stock < 10
	RETURNING product_id
)
SELECT * INTO last_orders_on_discontinued
FROM order_details
WHERE product_id IN (SELECT product_id FROM prod_update);

SAVEPOINT backup;

DELETE FROM order_details
WHERE product_id IN (SELECT product_id FROM last_orders_on_discontinued);

ROLLBACK TO backup;

UPDATE last_orders_on_discontinued
SET quantity = 0
WHERE product_id IN (SELECT product_id FROM order_details);

COMMIT;

SELECT * FROM order_details;
SELECT * FROM last_orders_on_discontinued;


-- пример 2.
ALTER TABLE employees DROP COLUMN salary;
-- добавим столбец с зарплатами сотрудников
ALTER TABLE employees ADD COLUMN salary decimal(12, 2) CHECK(salary >= 0);
-- создадим для них величины зарплат
UPDATE employees SET salary = 100 * random();
-- проверяем
SELECT
	employee_id,
	salary
FROM employees
ORDER BY salary;

-- создадим логику по изменению зарплат
BEGIN TRANSACTION;

UPDATE employees
SET salary = salary * 1.5
WHERE salary < 40;

UPDATE employees
SET salary = salary * 0.8
WHERE salary > 80;

COMMIT;

-- проверяем
SELECT
	employee_id,
	salary
FROM employees
ORDER BY salary;

-- создадим вторую логику по изменению зарплат
BEGIN TRANSACTION;

UPDATE employees
SET salary = salary * 1.5
WHERE salary < 50;

SAVEPOINT increas_salary;

UPDATE employees
SET salary = salary * 0.8
WHERE salary > 70;

ROLLBACK TO increas_salary;

UPDATE employees
SET salary = 0
WHERE employee_id = 9;

COMMIT;

-- проверяем
SELECT
	employee_id,
	salary
FROM employees
ORDER BY salary;