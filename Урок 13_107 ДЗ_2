-- Задание 2
/* Написать функцию, которая фильтрует телефонные номера по коду оператора.
 Принимает 3-х значный код мобильного оператора и список телефонных номеров в формате +1(234)5678901 (variadic)
 Функция возвращает только те номера, код оператора которых соответствует значению соответствующего аргумента.
 Проверить функцию передав следующие аргументы:
 903, +7(903)1901235, +7(926)8567589, +7(903)1532476
 Попробовать передать аргументы с созданием массива и без.
Подсказка: чтобы передать массив в VARIADIC-аргумент, надо перед массивом прописать, собственно, ключевое слово variadic.
*/

CREATE OR REPLACE FUNCTION filter_telephone_number_by_code(phone_code int, VARIADIC phone_number text[]) RETURNS SETOF text AS
$$
BEGIN
	FOR phone IN 1..array_upper(phone_number, 1)
	LOOP
		CONTINUE WHEN phone_number[phone] NOT LIKE CONCAT('%(', CAST(phone_code AS text), ')%');
		RETURN NEXT phone_number[phone];
	END LOOP;
END;
$$ LANGUAGE PLpgSQL;

SELECT * FROM filter_telephone_number_by_code(903, '+7(903)1901235', '+7(926)8567589', '+7(903)1532476');
SELECT * FROM filter_telephone_number_by_code(903, VARIADIC ARRAY['+7(903)1901235', '+7(926)8567589', '+7(903)1532476']);


-- лекционный вариант
CREATE OR REPLACE FUNCTION filter_by_operator(oper int, VARIADIC numbers text[]) RETURNS SETOF text AS
$$
DECLARE
	cur_val text;
BEGIN
	FOREACH cur_val IN ARRAY numbers
	LOOP
		RAISE NOTICE 'cur_val is %', cur_val;
		CONTINUE WHEN cur_val NOT LIKE CONCAT('__(', oper, ')%');
		RETURN NEXT cur_val;
	END LOOP;
END;
$$ LANGUAGE PLpgSQL;

SELECT * FROM filter_by_operator(903, '+7(903)1901235', '+7(926)8567589', '+7(903)1532476');
SELECT * FROM filter_by_operator(903, VARIADIC ARRAY['+7(903)1901235', '+7(926)8567589', '+7(903)1532476']);
