DROP TABLE IF EXISTS book;

CREATE TABLE book
(
	book_id int NOT NULL,
	title text NOT NULL,
	isbn varchar(32) NOT NULL,
	publisher_id int NOT NULL,
	
	CONSTRAINT pk_book_book_id PRIMARY KEY (book_id)
);

SELECT * FROM book;

-- создать последовательность, начинающуюся с 1 и обращающуюся к столбцу book_id таблицы book
CREATE SEQUENCE IF NOT EXISTS book_book_id_seq
START WITH 1
OWNED BY book.book_id;

INSERT INTO book (title, isbn, publisher_id)
VALUES
('title', 'isbn', 1);
-- не сработает - нужно ограничение (условие по умолчанию), которое срабатывает при условии,
-- что никто не вставляет в заданное поле.
-- тогда происходит обращение к последовательности

-- создание ограничения (условия по умолчанию)
ALTER TABLE book
ALTER COLUMN book_id SET DEFAULT nextval('book_book_id_seq');

INSERT INTO book (title, isbn, publisher_id)
VALUES
('title', 'isbn', 1);

SELECT * FROM book;

INSERT INTO book (title, isbn, publisher_id)
VALUES
('title', 'isbn', 1);

SELECT * FROM book;


-- ********************************************************************************************
DROP TABLE IF EXISTS book;

CREATE TABLE book
(
	book_id serial NOT NULL,
	title text NOT NULL,
	isbn varchar(32) NOT NULL,
	publisher_id int NOT NULL,
	
	CONSTRAINT pk_book_book_id PRIMARY KEY (book_id)
);

SELECT * FROM book;

INSERT INTO book (title, isbn, publisher_id)
VALUES
('title', 'isbn', 1);
INSERT INTO book (title, isbn, publisher_id)
VALUES
('title', 'isbn', 1);

SELECT * FROM book;

-- недостатки псевдотипа serial
-- вставим вручную номер book_id
INSERT INTO book (book_id, title, isbn, publisher_id)
VALUES
(3, 'title', 'isbn', 1);
SELECT * FROM book;

-- если теперь вставить значение без указания id:
INSERT INTO book (title, isbn, publisher_id)
VALUES
('title', 'isbn', 1);
-- возникнет ошибка - последовательность тоже выдаст значение book_id = 3


-- новый синтаксис создания последовательсноти
DROP TABLE IF EXISTS book;
CREATE TABLE book
(
	book_id int GENERATED ALWAYS AS IDENTITY NOT NULL,
	-- или
	-- book_id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	title text NOT NULL,
	isbn varchar(32) NOT NULL,
	publisher_id int NOT NULL,
	
	CONSTRAINT pk_book_book_id PRIMARY KEY (book_id)
);

INSERT INTO book (title, isbn, publisher_id)
VALUES
('title', 'isbn', 1);
INSERT INTO book (title, isbn, publisher_id)
VALUES
('title', 'isbn', 1);

SELECT * FROM book;

INSERT INTO book (book_id, title, isbn, publisher_id)
VALUES
(3, 'title', 'isbn', 1);
SELECT * FROM book;
-- выдаст ошибку - вставлять данные вручную нельзя

-- чтобы обойти это ограничение используют:
INSERT INTO book (book_id, title, isbn, publisher_id)
OVERRIDING SYSTEM VALUE
VALUES
(3, 'title', 'isbn', 1);
SELECT * FROM book;

-- но OVERRIDING SYSTEM VALUE не устраняет последующую ошибку:
INSERT INTO book (title, isbn, publisher_id)
VALUES
('title', 'isbn', 1);

-- ************************
DROP TABLE IF EXISTS book;
CREATE TABLE book
(
	book_id int GENERATED ALWAYS AS IDENTITY (START WITH 10 INCREMENT BY 2) NOT NULL,
	-- или
	-- book_id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	title text NOT NULL,
	isbn varchar(32) NOT NULL,
	publisher_id int NOT NULL,
	
	CONSTRAINT pk_book_book_id PRIMARY KEY (book_id)
);

INSERT INTO book (title, isbn, publisher_id)
VALUES
('title', 'isbn', 1);
INSERT INTO book (title, isbn, publisher_id)
VALUES
('title', 'isbn', 1);

SELECT * FROM book;


